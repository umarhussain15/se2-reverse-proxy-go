version: '2.1'
services:
  nginx:
    build: nginx
    volumes:
      - ./nginx/www:/var/www/nginx
    networks:
      - se_backend
  grproxy:
    build: grproxy
    environment:
      PORT: "80"
      STATIC_CONTENT_HOST: "nginx"
      ZOOKEEPER_HOST: "zookeeper"
    networks:
      - se_frontend
      - se_backend
    ports:
      - "80:80"
    depends_on:
      hbase:
        condition: service_healthy
      nginx:
        condition: service_started
  hbase:
    build: hbase
    networks:
      se_backend:
        aliases:
          - zookeeper
    healthcheck:
      test: wget -q http://localhost:8080/ || exit 1
      retries: 4
      interval: 300ms
  gserve1:
    build: gserve
    environment:
      ID: "gserve1"
      PORT: "80"
      HBASE_HOST: "hbase:8080"
      ZOOKEEPER_HOST: "zookeeper"
    networks:
      - se_backend
    depends_on:
      hbase:
        condition: service_healthy
      grproxy:
        condition: service_started
  gserve2:
    build: gserve
    environment:
      ID: "gserve2"
      PORT: "80"
      HBASE_HOST: "hbase:8080"
      ZOOKEEPER_HOST: "zookeeper"
    networks:
      - se_backend
    depends_on:
      hbase:
        condition: service_healthy
      grproxy:
        condition: service_started
networks:
  se_backend:
    driver: bridge
  se_frontend:
    driver: bridge
